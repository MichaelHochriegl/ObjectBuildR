//HintName: MovieBuilder.g.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using MovieBuildR.Tests;
using ObjectBuildR;
using ObjectBuildR.Generator.Tests.Models.Movie;

namespace MovieBuildR.Tests
{
    public partial class MovieBuilder : BuildRBase<Movie>
    {
        public Lazy<string> Name =
            new Lazy<string>(() => default(string));
        public Lazy<System.DateOnly> ReleaseDate =
            new Lazy<System.DateOnly>(() => default(System.DateOnly));
        public Lazy<ObjectBuildR.Generator.Tests.Models.Movie.VideoStream> VideoStream =
            new Lazy<ObjectBuildR.Generator.Tests.Models.Movie.VideoStream>(() => default(ObjectBuildR.Generator.Tests.Models.Movie.VideoStream));
        public Lazy<System.Collections.Generic.IEnumerable<ObjectBuildR.Generator.Tests.Models.Movie.AudioStream>> AudioStreams =
            new Lazy<System.Collections.Generic.IEnumerable<ObjectBuildR.Generator.Tests.Models.Movie.AudioStream>>(() => default(System.Collections.Generic.IEnumerable<ObjectBuildR.Generator.Tests.Models.Movie.AudioStream>));

        public MovieBuilder WithName(Func<string> func)
        {
            Name = new Lazy<string>(func);
            return this;
        }

        public MovieBuilder WithName(string value)
        {
            return WithName(() => value);
        }

        public MovieBuilder WithReleaseDate(Func<System.DateOnly> func)
        {
            ReleaseDate = new Lazy<System.DateOnly>(func);
            return this;
        }

        public MovieBuilder WithReleaseDate(System.DateOnly value)
        {
            return WithReleaseDate(() => value);
        }

        public MovieBuilder WithVideoStream(Func<ObjectBuildR.Generator.Tests.Models.Movie.VideoStream> func)
        {
            VideoStream = new Lazy<ObjectBuildR.Generator.Tests.Models.Movie.VideoStream>(func);
            return this;
        }

        public MovieBuilder WithVideoStream(ObjectBuildR.Generator.Tests.Models.Movie.VideoStream value)
        {
            return WithVideoStream(() => value);
        }

        public MovieBuilder WithAudioStreams(Func<System.Collections.Generic.IEnumerable<ObjectBuildR.Generator.Tests.Models.Movie.AudioStream>> func)
        {
            AudioStreams = new Lazy<System.Collections.Generic.IEnumerable<ObjectBuildR.Generator.Tests.Models.Movie.AudioStream>>(func);
            return this;
        }

        public MovieBuilder WithAudioStreams(System.Collections.Generic.IEnumerable<ObjectBuildR.Generator.Tests.Models.Movie.AudioStream> value)
        {
            return WithAudioStreams(() => value);
        }

        public override Movie Build()
        {
            if (Object?.IsValueCreated != true)
            {
                Object = new(() =>
                {
                    var result = new Movie
                    {
                        Name = Name.Value,
                        ReleaseDate = ReleaseDate.Value,
                        VideoStream = VideoStream.Value,
                        AudioStreams = AudioStreams.Value,
                    }
                    ;
                    return result;
                }
                );
            }
            return Object.Value;
        }
    }
}
